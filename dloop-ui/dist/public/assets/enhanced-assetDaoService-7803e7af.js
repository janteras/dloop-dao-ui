import{a as f}from"./contracts-444c63f0.js";import{Q as O,g as x,l as d,k as v,i as C,bw as A}from"./index-971aa118.js";function b(t){let e="Transaction failed. Please try again.";try{if(!t)return{message:e,originalError:t};if(typeof t=="string")return{message:t,originalError:t};if(t.reason)e=t.reason;else if(t.message)if(t.message.includes("user rejected transaction"))e="Transaction was rejected in wallet";else if(t.message.includes("execution reverted")){const r=t.message.match(/execution reverted: (.*?)"/);e=r?`Transaction reverted: ${r[1]}`:"Transaction reverted by the contract"}else t.message.includes("insufficient funds")?e="Insufficient funds for transaction":t.message.includes("gas required exceeds")?e="Transaction would run out of gas. Try increasing gas limit.":t.message.includes("nonce too high")?e="Transaction nonce issue. Please refresh the page and try again.":t.message.includes("replacement fee too low")?e="Gas price too low to replace pending transaction":t.message.includes("already known")?e="Transaction already submitted":t.message.includes("network changed")?e="Network changed unexpectedly. Please refresh.":t.message.includes("cannot estimate gas")?e="Could not estimate gas. The transaction may fail.":t.message.includes("timeout")?e="Request timed out. The network may be congested.":e=t.message.replace(/\(action="[^"]*", data=null, reason=null, code=[^,]+, version=[^,]+, [^)]*\)/,"");else if(t.code)switch(t.code){case 4001:e="Transaction rejected by user";break;case-32602:e="Invalid transaction parameters";break;case-32603:e="Internal error processing transaction";break;default:e=`Error code ${t.code}`}return e=e.length>120?e.substring(0,117)+"...":e,{message:e,originalError:t}}catch(r){return console.error("Error while parsing Ethers error:",r),{message:"An unexpected error occurred",originalError:t}}}async function k(t,e=[],r="Contract Error"){try{return await t(...e)}catch(n){const s=b(n),o=`${r}: ${s.message}`;throw console.error(o,n),new Error(o,{cause:n})}}async function p(t,e=[],r={}){const{errorPrefix:n="Transaction Error",confirmations:s=1,onSubmitted:o,onConfirmed:a,onError:l}=r;try{const u=await t(...e);o&&o(u);const h=await u.wait(s);return a&&a(h),h}catch(u){const h=b(u),g=`${n}: ${h.message}`;throw console.error(g,u),l&&l(u),new Error(g,{cause:u})}}function y(t,e=18,r=2){if(t==null)return"0";try{const n=O(t,e);return x(parseFloat(n),r)}catch(n){return console.warn("Error formatting big number:",n),"0"}}var w=(t=>(t.INFO="info",t.WARNING="warning",t.ERROR="error",t.CRITICAL="critical",t))(w||{}),c=(t=>(t.BLOCKCHAIN="blockchain",t.CONTRACT="contract",t.NETWORK="network",t.USER_INPUT="user_input",t.AUTHENTICATION="authentication",t.API="api",t.NAVIGATION="navigation",t.UI="ui",t.UNKNOWN="unknown",t))(c||{});class R{constructor(){this.errorLog=[],this.maxLogSize=50,this.errorListeners=[]}registerErrorListener(e){return this.errorListeners.push(e),()=>{this.errorListeners=this.errorListeners.filter(r=>r!==e)}}notifyListeners(e){this.errorListeners.forEach(r=>{try{r(e)}catch(n){console.error("Error in error listener:",n)}})}logError(e){this.errorLog.unshift(e),this.errorLog.length>this.maxLogSize&&(this.errorLog=this.errorLog.slice(0,this.maxLogSize))}getErrorLog(){return[...this.errorLog]}clearErrorLog(){this.errorLog=[]}createError(e,r="unknown",n="error",s,o,a){return{message:e,category:r,severity:n,timestamp:Date.now(),details:s,originalError:o,code:a}}handleError(e,r="An unexpected error occurred",n="unknown",s="error"){let o;if(e instanceof Error)o=this.createError(e.message||r,n,s,{stack:e.stack},e);else if(typeof e=="string")o=this.createError(e,n,s);else if(e&&typeof e=="object"){const a=e.message||e.reason||e.error||r;o=this.createError(a,n,s,e,e)}else o=this.createError(r,n,s);return this.logError(o),this.notifyListeners(o),o}handleBlockchainError(e,r="Blockchain transaction failed"){const{message:n,originalError:s}=b(e);let o="error";(n.includes("reject")||n.includes("denied")||n.includes("canceled"))&&(o="warning");const a=this.createError(n||r,"blockchain",o,{originalMessage:e.message},s);return this.logError(a),this.notifyListeners(a),a}handleContractError(e,r="Contract",n="interaction"){const s=`Error during ${r} ${n}`,{message:o,originalError:a}=b(e),l=this.createError(o||s,"contract","error",{contract:r,method:n},a);return this.logError(l),this.notifyListeners(l),l}handleValidationError(e,r="input"){let n=`Invalid ${r}`;typeof e=="string"?n=e:e!=null&&e.message&&(n=e.message);const s=this.createError(n,"user_input","warning",{field:r},e);return this.logError(s),this.notifyListeners(s),s}handleNetworkError(e){let r="Network connection issue";const n="error";e!=null&&e.message&&(e.message.includes("timeout")?r="Request timed out. Please check your connection.":e.message.includes("Network Error")?r="Network connection lost. Please check your internet connection.":e.message.includes("Failed to fetch")?r="Failed to connect to server. Please try again later.":r=e.message);const s=this.createError(r,"network",n,{},e);return this.logError(s),this.notifyListeners(s),s}}const E=new R;function m(t,e="unknown",r){switch(e){case"blockchain":return E.handleBlockchainError(t,r);case"contract":return E.handleContractError(t);case"network":return E.handleNetworkError(t);case"user_input":return E.handleValidationError(t);default:return E.handleError(t,r,e)}}class I{constructor(){this.isInitialized=!1,this.handleAppError=e=>{let r;switch(e.severity){case w.CRITICAL:case w.ERROR:r="error";break;case w.WARNING:r="warning";break;case w.INFO:default:r="info";break}let n="Error",s=5e3;switch(e.category){case c.BLOCKCHAIN:n="Blockchain Error",s=6e3;break;case c.CONTRACT:n="Smart Contract Error",s=6e3;break;case c.NETWORK:n="Network Error",s=4e3;break;case c.USER_INPUT:n="Validation Error",s=4e3;break;case c.AUTHENTICATION:n="Authentication Error",s=5e3;break;case c.API:n="API Error",s=5e3;break;default:n="Error",s=5e3}this.notify({title:n,description:e.message,type:r,closeAfterMs:s,autoClose:!0})}}initialize(){this.isInitialized||(E.registerErrorListener(this.handleAppError),this.isInitialized=!0)}success(e,r={}){this.notify({description:e,type:"success",autoClose:!0,closeAfterMs:4e3,...r})}info(e,r={}){this.notify({description:e,type:"info",autoClose:!0,closeAfterMs:4e3,...r})}warning(e,r={}){this.notify({description:e,type:"warning",autoClose:!0,closeAfterMs:5e3,...r})}error(e,r={}){this.notify({description:e,type:"error",autoClose:!0,closeAfterMs:6e3,...r})}transaction(e,r="sepolia",n={}){const o=`${r==="mainnet"?"https://etherscan.io":`https://${r}.etherscan.io`}/tx/${e}`;return d.loading("Transaction pending. Click to view on Etherscan.",{duration:1/0,position:"bottom-right",onClick:()=>{window.open(o,"_blank")},...n})}updateTransaction(e,r,n){switch(r){case"success":d.success(n||"Transaction confirmed!",{id:e,duration:5e3});break;case"error":d.error(n||"Transaction failed",{id:e,duration:7e3});break;case"loading":d.loading(n||"Transaction in progress...",{id:e,duration:1/0});break}}notify(e){const{title:r,description:n,type:s="info",autoClose:o=!0,closeAfterMs:a=4e3,...l}=e;let u;switch(s){case"success":u=d.success;break;case"error":u=d.error;break;case"warning":u=(g,N)=>d(g,{...N,icon:"⚠️"});break;case"info":default:u=d;break}const h=r?`${r}: ${n}`:n;u(h,{duration:o?a:1/0,position:"bottom-center",...l})}dismissAll(){d.dismiss()}}const i=new I;i.initialize();const D={"0x05b366778566e93abfb8e4a9b794e4ad006446b4":{symbol:"DLOOP",name:"D-Loop Token",decimals:18},"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48":{symbol:"USDC",name:"USD Coin",decimals:6},"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599":{symbol:"WBTC",name:"Wrapped Bitcoin",decimals:8},"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2":{symbol:"WETH",name:"Wrapped Ether",decimals:18},"0xda9d4f9b69ac6c22e444ed9af0cfc043b7a7f53f":{symbol:"USDC",name:"USD Coin (Sepolia)",decimals:6},"0x3e622317f8c93f7328350cf0b56d9ed4c620c5d6":{symbol:"WBTC",name:"Wrapped Bitcoin (Sepolia)",decimals:8}};class P{constructor(e=D){this.provider=null,this.cache=new Map,this.tokenRegistry={...e}}setProvider(e){this.provider=e}getERC20ABI(){return["function symbol() view returns (string)","function name() view returns (string)","function decimals() view returns (uint8)"]}registerToken(e,r){const n=e.toLowerCase();return this.tokenRegistry[n]=r,this.cache.set(n,r),r}updateToken(e,r){const n=e.toLowerCase();return this.tokenRegistry[n]?(this.tokenRegistry[n]={...this.tokenRegistry[n],...r},this.cache.set(n,this.tokenRegistry[n]),this.tokenRegistry[n]):null}getTokenInfo(e){if(!e)return null;const r=e.toLowerCase();if(this.cache.has(r))return this.cache.get(r)||null;const n=this.tokenRegistry[r];return n?(this.cache.set(r,n),n):null}getTokenSymbol(e){if(!e)return"Unknown";if(!e.startsWith("0x")||e.length!==42)return e;const r=this.getTokenInfo(e);return r?r.symbol:(this.fetchTokenInfoAsync(e),this.formatUnknownToken(e))}formatUnknownToken(e){return e?`${e.substring(0,6)}...${e.substring(e.length-4)}`:"Unknown"}async fetchTokenInfoAsync(e){if(!this.provider||!e||!e.startsWith("0x"))return null;const r=e.toLowerCase();try{const n=new v(e,this.getERC20ABI(),this.provider),[s,o,a]=await Promise.all([n.symbol(),n.name(),n.decimals()]),l={symbol:s,name:o,decimals:a};return this.registerToken(r,l),l}catch(n){return console.error(`Failed to fetch token info for ${e}:`,n),null}}formatAmount(e,r,n=18){const s=this.getTokenInfo(r),o=(s==null?void 0:s.decimals)??n;try{const a=typeof e=="number"?e:parseFloat(e);return isNaN(a)?"0":a.toLocaleString(void 0,{minimumFractionDigits:0,maximumFractionDigits:o})}catch(a){return console.warn(`Error formatting amount for token ${r}:`,a),e.toString()}}clearCache(){this.cache.clear()}}const T=new P;var L=(t=>(t[t.Investment=0]="Investment",t[t.Divestment=1]="Divestment",t[t.ParameterChange=2]="ParameterChange",t[t.Other=3]="Other",t))(L||{}),$=(t=>(t[t.Pending=0]="Pending",t[t.Active=1]="Active",t[t.Defeated=2]="Defeated",t[t.Succeeded=3]="Succeeded",t[t.Queued=4]="Queued",t[t.Executed=5]="Executed",t[t.Expired=6]="Expired",t[t.Canceled=7]="Canceled",t))($||{});const V=t=>{const e=Number(t.state||0);return{id:Number(t.id||0),proposer:t.proposer||A,description:t.description||"",proposalType:Number(t.proposalType||0),token:t.token||A,amount:parseFloat(y(t.amount,18,6)),createdAt:new Date(Number(t.createdAt||0)*1e3),votingEnds:new Date(Number(t.votingEnds||0)*1e3),forVotes:parseFloat(y(t.forVotes,18,6)),againstVotes:parseFloat(y(t.againstVotes,18,6)),executed:!!t.executed,canceled:!!t.canceled,state:e}},S={async getProposalDetails(t,e){try{const r=f("AssetDAO",t),n=await k(r.getProposal,[e],"Error fetching proposal details");return V(n)}catch(r){const n=m(r,c.CONTRACT,`Failed to fetch proposal #${e}`);throw new Error(n.message,{cause:r})}},async createInvestmentProposal(t,e,r,n){try{const s=f("AssetDAO",t);if(!C(e))throw new Error("Invalid token address format");return i.info("Preparing investment proposal transaction..."),await p(s.propose,[0,e,r,n],{errorPrefix:"Investment Proposal Error",onSubmitted:o=>{i.transaction(o.hash,"sepolia",{title:"Investment Proposal"})},onConfirmed:()=>{i.success("Investment proposal created successfully!");try{const o=new v(e,["function symbol() view returns (string)","function decimals() view returns (uint8)"],t);o.symbol().then(a=>{T.registerToken(e,{symbol:a,name:a,decimals:18}),o.decimals().then(l=>{T.updateToken(e,{decimals:l})}).catch(()=>{})}).catch(()=>{})}catch{}}})}catch(s){throw m(s,c.CONTRACT),s}},async createDivestmentProposal(t,e,r,n){try{const s=f("AssetDAO",t);if(!C(e))throw new Error("Invalid token address format");return i.info("Preparing divestment proposal transaction..."),await p(s.propose,[1,e,r,n],{errorPrefix:"Divestment Proposal Error",onSubmitted:o=>{i.transaction(o.hash,"sepolia",{title:"Divestment Proposal"})},onConfirmed:()=>{i.success("Divestment proposal created successfully!")}})}catch(s){throw m(s,c.CONTRACT),s}},async createParameterChangeProposal(t,e,r,n){try{const s=f("AssetDAO",t);if(!C(e))throw new Error("Invalid parameter address format");return i.info("Preparing parameter change proposal transaction..."),await p(s.propose,[2,e,r,n],{errorPrefix:"Parameter Change Proposal Error",onSubmitted:o=>{i.transaction(o.hash,"sepolia",{title:"Parameter Change Proposal"})},onConfirmed:()=>{i.success("Parameter change proposal created successfully!")}})}catch(s){throw m(s,c.CONTRACT),s}},async voteOnProposal(t,e,r){try{const n=f("AssetDAO",t),s=r?"For":"Against";i.info(`Preparing to vote ${s} proposal #${e}...`);try{return await p(n.vote,[e,r],{errorPrefix:"Voting Error",onSubmitted:o=>{i.transaction(o.hash,"sepolia",{title:`Vote ${s}`})},onConfirmed:()=>{i.success(`Successfully voted ${s} proposal #${e}`)}})}catch(o){if(o.message&&(o.message.includes("has no method")||o.message.includes("not a function")||o.message.includes("unknown function")))return console.log("vote() function not found, trying castVote()..."),await p(n.castVote,[e,r],{errorPrefix:"Voting Error",onSubmitted:a=>{i.transaction(a.hash,"sepolia",{title:`Vote ${s}`})},onConfirmed:()=>{i.success(`Successfully voted ${s} proposal #${e}`)}});throw o}}catch(n){throw m(n,c.CONTRACT),n}},async checkVotingStatus(t,e,r){try{const n=f("AssetDAO",t);try{const s=await k(n.getReceipt,[e,r],"Error checking vote receipt");return{hasVoted:s.hasVoted,support:s.support,votes:parseFloat(y(s.votes,18,6))}}catch(s){if(s.message&&(s.message.includes("has no method")||s.message.includes("not a function")||s.message.includes("unknown function")))return{hasVoted:await k(n.hasVoted,[e,r],"Error checking voting status")};throw s}}catch(n){return m(n,c.CONTRACT),{hasVoted:!1}}},async executeProposal(t,e){try{const r=f("AssetDAO",t);return i.info(`Preparing to execute proposal #${e}...`),await p(r.executeProposal,[e],{errorPrefix:"Execution Error",onSubmitted:n=>{i.transaction(n.hash,"sepolia",{title:"Execute Proposal"})},onConfirmed:()=>{i.success(`Successfully executed proposal #${e}`)}})}catch(r){throw m(r,c.CONTRACT),r}},async cancelProposal(t,e){try{const r=f("AssetDAO",t);return i.info(`Preparing to cancel proposal #${e}...`),await p(r.cancelProposal,[e],{errorPrefix:"Cancellation Error",onSubmitted:n=>{i.transaction(n.hash,"sepolia",{title:"Cancel Proposal"})},onConfirmed:()=>{i.success(`Successfully canceled proposal #${e}`)}})}catch(r){throw m(r,c.CONTRACT),r}},async getAllProposals(t,e={}){try{const{limit:r=50,offset:n=0}=e,s=f("AssetDAO",t),o=await k(s.getProposalCount,[],"Error fetching proposal count"),a=Number(o),l=Math.max(0,a-n-r),u=Math.max(0,a-n),h=[];for(let g=l;g<u;g++)h.push(this.getProposalDetails(t,g));return await Promise.all(h)}catch(r){return m(r,c.CONTRACT,"Failed to fetch proposals"),[]}}};export{S as E,$ as P,T,L as a};
