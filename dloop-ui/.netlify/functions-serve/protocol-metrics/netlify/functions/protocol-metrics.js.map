{
  "version": 3,
  "sources": ["../../../../../../Users/apple/Downloads/dloop-dao-ui/dloop-ui/netlify/functions/protocol-metrics.js"],
  "sourceRoot": "/var/folders/k6/tfs_tx3s5fd5xc70ld8bcvlw0000gq/T/tmp-36172-SPcLf2jGKt0f",
  "sourcesContent": ["// ESM version of the protocol-metrics function\n\n// Define hardcoded metrics data to ensure compatibility\nconst protocolMetrics = {\n  // Enhanced metrics with additional fields for frontend display\n  tvl: 12450000,              // Total value locked in USD\n  tvlChange: 8.7,            // Percent change in TVL\n  dloopPrice: 2.76,          // DLOOP token price in USD\n  dloopPriceChange: 3.2,     // Percent change in DLOOP price\n  d_ai_price: 1.01,          // D-AI token price in USD\n  totalProtocolValue: 45890000, // Total protocol value in USD\n  d_ai_supply: 45880000,     // Total D-AI token supply\n  dloop_supply: 10000000,    // Total DLOOP token supply\n  dloop_circulating: 3250000,// Circulating supply of DLOOP tokens\n  proposal_count: 42,        // Number of proposals created\n  active_nodes: 18,          // Number of active AI nodes\n  treasuryBalance: 5250000,  // Treasury balance in USD\n  stakingApy: 12.4,          // Annual percentage yield for staking\n  tradingVolume24h: 876500,  // 24-hour trading volume in USD\n  userCount: 8750            // Total number of users\n};\n\n// Converted to ESM-compatible export format\nexport const handler = async (event, context) => {\n  console.log('Protocol metrics function called - ESM version');\n  \n  // Set CORS headers for all responses\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Content-Type': 'application/json' // Always set Content-Type for all responses\n  };\n  \n  try {\n    // Handle OPTIONS requests for CORS preflight\n    if (event.httpMethod === 'OPTIONS') {\n      return {\n        statusCode: 204,\n        headers,\n        body: ''\n      };\n    }\n    \n    if (event.httpMethod === 'GET') {\n      // Return protocol metrics\n      console.log('Returning protocol metrics data');\n      return {\n        statusCode: 200,\n        headers,\n        body: JSON.stringify(protocolMetrics)\n      };\n    }\n    \n    // Default response for unsupported methods\n    console.log(`Unsupported method: ${event.httpMethod}`);\n    return {\n      statusCode: 405,\n      headers,\n      body: JSON.stringify({ error: 'Method not allowed' })\n    };\n  } catch (error) {\n    // Log the error but still return valid JSON\n    console.error('Error in protocol-metrics function:', error);\n    return {\n      statusCode: 500,\n      headers,\n      body: JSON.stringify({ \n        error: 'An error occurred processing your request',\n        message: error.message || 'Unknown error',\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      })\n    };\n  }\n};\n\n// Using pure ESM exports - we're not using CommonJS compatibility to avoid module conflicts\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,IAAM,kBAAkB;AAAA;AAAA,EAEtB,KAAK;AAAA;AAAA,EACL,WAAW;AAAA;AAAA,EACX,YAAY;AAAA;AAAA,EACZ,kBAAkB;AAAA;AAAA,EAClB,YAAY;AAAA;AAAA,EACZ,oBAAoB;AAAA;AAAA,EACpB,aAAa;AAAA;AAAA,EACb,cAAc;AAAA;AAAA,EACd,mBAAmB;AAAA;AAAA,EACnB,gBAAgB;AAAA;AAAA,EAChB,cAAc;AAAA;AAAA,EACd,iBAAiB;AAAA;AAAA,EACjB,YAAY;AAAA;AAAA,EACZ,kBAAkB;AAAA;AAAA,EAClB,WAAW;AAAA;AACb;AAGO,IAAM,UAAU,OAAO,OAAO,YAAY;AAC/C,UAAQ,IAAI,gDAAgD;AAG5D,QAAM,UAAU;AAAA,IACd,+BAA+B;AAAA,IAC/B,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,IAChC,gBAAgB;AAAA;AAAA,EAClB;AAEA,MAAI;AAEF,QAAI,MAAM,eAAe,WAAW;AAClC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AAEA,QAAI,MAAM,eAAe,OAAO;AAE9B,cAAQ,IAAI,iCAAiC;AAC7C,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM,KAAK,UAAU,eAAe;AAAA,MACtC;AAAA,IACF;AAGA,YAAQ,IAAI,uBAAuB,MAAM,UAAU,EAAE;AACrD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF,SAAS,OAAO;AAEd,YAAQ,MAAM,uCAAuC,KAAK;AAC1D,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,MAAM,WAAW;AAAA,QAC1B,OAAO,QAAQ,IAAI,aAAa,gBAAgB,MAAM,QAAQ;AAAA,MAChE,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
