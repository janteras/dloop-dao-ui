{
  "version": 3,
  "sources": ["../../../../../../Users/apple/Downloads/dloop-dao-ui/dloop-ui/netlify/functions/leaderboard.js"],
  "sourceRoot": "/var/folders/k6/tfs_tx3s5fd5xc70ld8bcvlw0000gq/T/tmp-36172-jTO4h1GSIfPd",
  "sourcesContent": ["// ESM version of leaderboard function\n\n// Define hardcoded data directly to ensure it works regardless of module issues\nconst leaderboardParticipants = [\n  {\n    address: \"0x7C3fA98507fFcD22A62264AeC6afA82099d96DE1\",\n    name: \"AI.Gov#01\",\n    type: \"Human\",\n    votingPower: 425000,\n    accuracy: 92,\n    isCurrentUser: false,\n    rank: 1,\n    delegators: 15,\n    performance: 18.4,\n    proposalsCreated: 22,\n    proposalsVoted: 38\n  },\n  {\n    address: \"0x9E23fA851681545894f3B3c33BD1E7D22239BDE8\",\n    name: \"DeFiWhale\",\n    type: \"Human\",\n    votingPower: 375000,\n    accuracy: 88,\n    isCurrentUser: false,\n    rank: 2,\n    delegators: 8,\n    performance: 14.2,\n    proposalsCreated: 11,\n    proposalsVoted: 35\n  },\n  {\n    address: \"0x3A4B670Be17F3a36F8F55BF7C3c7453495A04Ed1\",\n    name: \"AI.Gov#02\",\n    type: \"AI Node\",\n    votingPower: 310000,\n    accuracy: 95,\n    isCurrentUser: false,\n    rank: 3,\n    delegators: 12,\n    performance: 22.7,\n    proposalsCreated: 14,\n    proposalsVoted: 48\n  }\n];\n\nconst delegations = [\n  {\n    nodeId: \"node-1\",\n    address: \"0x7C3fA98507fFcD22A62264AeC6afA82099d96DE1\",\n    amount: 12500,\n    since: \"2025-03-15T12:00:00Z\"\n  },\n  {\n    nodeId: \"node-3\",\n    address: \"0x9E23fA851681545894f3B3c33BD1E7D22239BDE8\",\n    amount: 7500,\n    since: \"2025-04-02T15:30:00Z\"\n  }\n];\n\n// Converted to ESM-compatible export format\nexport const handler = async (event, context) => {\n  console.log('Leaderboard function called - ESM version');\n  \n  // Set CORS headers for all responses\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Content-Type': 'application/json' // Ensure Content-Type is set\n  };\n  \n  try {\n    // Handle OPTIONS requests for CORS preflight\n    if (event.httpMethod === 'OPTIONS') {\n      return {\n        statusCode: 204,\n        headers,\n        body: ''\n      };\n    }\n    \n    if (event.httpMethod === 'GET') {\n      // Use the pre-formatted data that matches what the frontend expects\n      console.log('Sending leaderboard data directly from predefined structures');\n      \n      // Data is already in the correct format for the frontend\n      const responseData = {\n        participants: leaderboardParticipants,\n        delegations: delegations\n      };\n      \n      console.log('Returning leaderboard data of format:', \n        `{ participants: Array(${leaderboardParticipants.length}), delegations: Array(${delegations.length}) }`);\n      \n      return {\n        statusCode: 200,\n        headers,\n        body: JSON.stringify(responseData)\n      };\n    }\n    \n    // Default response for unsupported methods\n    console.log(`Unsupported method: ${event.httpMethod}`);\n    return {\n      statusCode: 405,\n      headers,\n      body: JSON.stringify({ error: 'Method not allowed' })\n    };\n  } catch (error) {\n    // Log the error but still return valid JSON with more details for debugging\n    console.error('Error in leaderboard function:', error);\n    return {\n      statusCode: 500,\n      headers,\n      body: JSON.stringify({ \n        error: 'An error occurred processing your request',\n        message: error.message || 'Unknown error',\n        stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n      })\n    };\n  }\n};\n\n// Using pure ESM exports - we're not using CommonJS compatibility to avoid module conflicts\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,IAAM,0BAA0B;AAAA,EAC9B;AAAA,IACE,SAAS;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,EAClB;AAAA,EACA;AAAA,IACE,SAAS;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,EAClB;AAAA,EACA;AAAA,IACE,SAAS;AAAA,IACT,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,UAAU;AAAA,IACV,eAAe;AAAA,IACf,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,kBAAkB;AAAA,IAClB,gBAAgB;AAAA,EAClB;AACF;AAEA,IAAM,cAAc;AAAA,EAClB;AAAA,IACE,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,OAAO;AAAA,EACT;AACF;AAGO,IAAM,UAAU,OAAO,OAAO,YAAY;AAC/C,UAAQ,IAAI,2CAA2C;AAGvD,QAAM,UAAU;AAAA,IACd,+BAA+B;AAAA,IAC/B,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,IAChC,gBAAgB;AAAA;AAAA,EAClB;AAEA,MAAI;AAEF,QAAI,MAAM,eAAe,WAAW;AAClC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM;AAAA,MACR;AAAA,IACF;AAEA,QAAI,MAAM,eAAe,OAAO;AAE9B,cAAQ,IAAI,8DAA8D;AAG1E,YAAM,eAAe;AAAA,QACnB,cAAc;AAAA,QACd;AAAA,MACF;AAEA,cAAQ;AAAA,QAAI;AAAA,QACV,yBAAyB,wBAAwB,MAAM,yBAAyB,YAAY,MAAM;AAAA,MAAK;AAEzG,aAAO;AAAA,QACL,YAAY;AAAA,QACZ;AAAA,QACA,MAAM,KAAK,UAAU,YAAY;AAAA,MACnC;AAAA,IACF;AAGA,YAAQ,IAAI,uBAAuB,MAAM,UAAU,EAAE;AACrD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,EAAE,OAAO,qBAAqB,CAAC;AAAA,IACtD;AAAA,EACF,SAAS,OAAO;AAEd,YAAQ,MAAM,kCAAkC,KAAK;AACrD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,OAAO;AAAA,QACP,SAAS,MAAM,WAAW;AAAA,QAC1B,OAAO,QAAQ,IAAI,aAAa,gBAAgB,MAAM,QAAQ;AAAA,MAChE,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
