{
  "version": 3,
  "sources": ["../../../../../../Users/apple/Downloads/dloop-dao-ui/dloop-ui/netlify/functions/mockData.js", "../../../../../../Users/apple/Downloads/dloop-dao-ui/dloop-ui/netlify/functions/proposals.js"],
  "sourceRoot": "/var/folders/k6/tfs_tx3s5fd5xc70ld8bcvlw0000gq/T/tmp-36172-FT88CMbH6JJt",
  "sourcesContent": ["// Mock data for development/demo\n// Using ESM export syntax\nconst mockData = {\n  // Mock proposals data\n  proposals: [\n    {\n      id: 1,\n      title: \"Increase WBTC Allocation\",\n      description: \"Invest 10% more into WBTC\",\n      proposer: \"0x3F8a81d2db95F13507a82531596aDEFE898ac78e2\",\n      createdAt: Math.floor(Date.now() / 1000) - 86400,\n      endTime: Math.floor(Date.now() / 1000) + 172800, // 2 days from now\n      endTimeISO: new Date(Date.now() + 172800 * 1000).toISOString(), // 2 days from now in ISO format\n      forVotes: 70,\n      againstVotes: 30,\n      executed: false,\n      canceled: false,\n      status: \"active\",\n      type: \"invest\",\n      amount: 250000,\n      token: \"USDC\",\n      endsIn: \"2d 5h\"\n    },\n    {\n      id: 2,\n      title: \"Add LINK Token\",\n      description: \"Add Chainlink (LINK) to asset pool\",\n      proposer: \"AI.Gov#03\",\n      createdAt: Math.floor(Date.now() / 1000) - 43200,\n      endTime: Math.floor(Date.now() / 1000) + 450000, // 5+ days from now\n      endTimeISO: new Date(Date.now() + 450000 * 1000).toISOString(), // 5+ days from now in ISO format\n      forVotes: 45,\n      againstVotes: 55,\n      executed: false,\n      canceled: false,\n      status: \"active\",\n      type: \"invest\",\n      amount: 100000,\n      token: \"USDC\",\n      endsIn: \"5d 12h\"\n    },\n    {\n      id: 3,\n      title: \"Reduce PAXG Exposure\",\n      description: \"Divest 5% of PAXG holdings\",\n      proposer: \"0xA114f53B7Ad1c21b8808C54790cDC0221F8496B2\",\n      createdAt: Math.floor(Date.now() / 1000) - 129600,\n      endTime: Math.floor(Date.now() / 1000) + 259200, // 3 days from now\n      endTimeISO: new Date(Date.now() + 259200 * 1000).toISOString(), // 3 days from now in ISO format\n      forVotes: 65,\n      againstVotes: 35,\n      executed: false,\n      canceled: false,\n      status: \"active\",\n      type: \"divest\",\n      amount: 25,\n      token: \"PAXG\",\n      endsIn: \"3d 8h\"\n    },\n    {\n      id: 4,\n      title: \"Increase USDC Reserves\",\n      description: \"Add more stable reserves\",\n      proposer: \"AI.Gov#01\",\n      createdAt: Math.floor(Date.now() / 1000) - 604800,\n      endTime: Math.floor(Date.now() / 1000) - 86400, // 1 day ago\n      endTimeISO: new Date(Date.now() - 86400 * 1000).toISOString(), // 1 day ago in ISO format\n      forVotes: 82,\n      againstVotes: 18,\n      executed: false,\n      canceled: false,\n      status: \"passed\",\n      type: \"invest\",\n      amount: 500000,\n      token: \"USDC\",\n      endsIn: \"Ended\"\n    }\n  ],\n  \n  // Mock protocol proposals\n  protocolProposals: [\n    {\n      id: 12,\n      title: \"Update Fee Structure\",\n      description: \"Proposal to adjust the performance fee structure for AI nodes.\",\n      proposer: \"0xD4c35e65b1e473dfeC3da98B5fC110f0a78D3e7F\",\n      createdAt: Math.floor(Date.now() / 1000) - 864000,\n      updatedAt: Math.floor(Date.now() / 1000) - 864000,\n      forVotes: 65,\n      againstVotes: 35,\n      voteCount: 320450,\n      executed: false,\n      canceled: false,\n      status: \"active\",\n      endTimestamp: Math.floor(Date.now() / 1000) + 172800, // 2 days from now in seconds\n      endTimeISO: new Date(Date.now() + 172800 * 1000).toISOString()\n    }\n  ],\n  \n  // Mock protocol metrics\n  protocolMetrics: {\n    totalProtocolValue: 45890000,\n    d_ai_price: 1.01,\n    d_ai_supply: 45880000,\n    dloop_price: 2.76,\n    dloop_supply: 10000000,\n    dloop_circulating: 3250000,\n    proposal_count: 42,\n    active_nodes: 18\n  },\n  \n  // Mock leaderboard data\n  leaderboardParticipants: [\n    {\n      address: \"0x7C3fA98507fFcD22A62264AeC6afA82099d96DE1\",\n      delegatedAmount: 425000,\n      proposalsVoted: 38,\n      successRate: 92,\n      rewardsEarned: 15230,\n      rank: 1\n    },\n    {\n      address: \"0x9E23fA851681545894f3B3c33BD1E7D22239BDE8\",\n      delegatedAmount: 375000,\n      proposalsVoted: 35,\n      successRate: 88,\n      rewardsEarned: 12840,\n      rank: 2\n    }\n  ],\n  \n  // Mock delegation data for current user\n  delegations: [\n    {\n      nodeId: \"node-1\",\n      address: \"0x7C3fA98507fFcD22A62264AeC6afA82099d96DE1\", // Added address field\n      amount: 12500,\n      since: \"2025-03-15T12:00:00Z\"\n    },\n    {\n      nodeId: \"node-3\",\n      address: \"0x9E23fA851681545894f3B3c33BD1E7D22239BDE8\", // Added address field\n      amount: 7500,\n      since: \"2025-04-02T15:30:00Z\"\n    }\n  ],\n  \n  // Mock AI nodes\n  aiNodes: [\n    {\n      id: \"node-1\",\n      name: \"AI.Gov#01\",\n      address: \"0x7C3fA98507fFcD22A62264AeC6afA82099d96DE1\",\n      category: \"governance\",\n      votingPower: 245000,\n      responseTime: \"3.2 hours\",\n      accuracy: 92,\n      description: \"Specialized in parameter optimization and risk assessment for the protocol.\",\n      proposals: 12,\n      participation: 98,\n      reputation: 845\n    },\n    {\n      id: \"node-2\",\n      name: \"AI.Gov#02\",\n      address: \"0x9E23fA851681545894f3B3c33BD1E7D22239BDE8\",\n      category: \"governance\",\n      votingPower: 180000,\n      responseTime: \"4.5 hours\",\n      accuracy: 88,\n      description: \"Focuses on monetary policy and protocol economic parameters.\",\n      proposals: 8,\n      participation: 92,\n      reputation: 760\n    }\n  ],\n  \n  // Mock AI node performance metrics\n  aiNodePerformance: {\n    totalDelegated: 486870,\n    totalRewards: 86445,\n    avgResponseTime: 3.5,\n    avgSuccessRate: 89\n  }\n};\n\n// Helper function to generate reasoning text based on sentiment\nfunction generateSentimentReasoning(sentiment, proposalType) {\n  const reasonings = {\n    positive: {\n      expansion: \"The proposal aligns with our long-term growth strategy and provides sufficient risk management.\",\n      governance: \"The governance changes promote transparency and community participation while maintaining operational efficiency.\",\n      default: \"This proposal demonstrates strong fundamentals and a clear benefit to the ecosystem.\"\n    },\n    neutral: {\n      expansion: \"While the initiative has merit, there are questions about timing and resource allocation.\",\n      governance: \"The governance modifications are reasonable but may need refinement in implementation details.\",\n      default: \"The proposal has both benefits and drawbacks that need careful consideration.\"\n    },\n    negative: {\n      expansion: \"The expansion plan lacks adequate risk assessment and may overextend our resources.\",\n      governance: \"The proposed changes could centralize power and reduce community oversight.\",\n      default: \"This proposal introduces significant risks that outweigh potential benefits.\"\n    }\n  };\n  \n  return reasonings[sentiment][proposalType] || reasonings[sentiment].default;\n}\n\n// Export the mockData using ESM syntax\nexport { mockData, generateSentimentReasoning };\n\n// Note: We're now using pure ESM exports to avoid module system conflicts\n", "const { mockData } = require('./mockData');\n\nexports.handler = async (event, context) => {\n  // Set CORS headers for all responses\n  const headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type, x-wallet-address',\n    'Access-Control-Allow-Methods': 'GET, POST, OPTIONS'\n  };\n  \n  // Handle OPTIONS requests for CORS preflight\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers,\n      body: ''\n    };\n  }\n  \n  if (event.httpMethod === 'GET') {\n    // Return all proposals\n    return {\n      statusCode: 200,\n      headers,\n      body: JSON.stringify(mockData.proposals)\n    };\n  }\n  \n  if (event.httpMethod === 'POST') {\n    try {\n      // Parse the request body\n      const body = JSON.parse(event.body);\n      const { title, description, type, amount, token, duration } = body;\n      \n      // Validate required fields\n      if (!title || !description || !type || !amount || !token || !duration) {\n        return {\n          statusCode: 400,\n          headers,\n          body: JSON.stringify({ error: 'Missing required fields' })\n        };\n      }\n      \n      // Create new proposal\n      const newProposal = {\n        id: mockData.proposals.length + 1,\n        title: String(title),\n        description: String(description),\n        proposer: event.headers['x-wallet-address'] || '0x7F5Ae2',\n        createdAt: Math.floor(Date.now() / 1000),\n        endTime: Math.floor(Date.now() / 1000) + (Number(duration) * 86400), // duration in days\n        endTimeISO: new Date(Date.now() + Number(duration) * 86400 * 1000).toISOString(), // duration in days, in ISO format\n        forVotes: 0,\n        againstVotes: 0,\n        executed: false,\n        canceled: false,\n        status: 'active',\n        type: String(type),\n        amount: parseFloat(amount.toString()),\n        token: String(token),\n        endsIn: `${duration}d`\n      };\n      \n      // Add to mock data\n      mockData.proposals.unshift(newProposal);\n      \n      return {\n        statusCode: 201,\n        headers,\n        body: JSON.stringify(newProposal)\n      };\n    } catch (error) {\n      return {\n        statusCode: 500,\n        headers,\n        body: JSON.stringify({ error: 'Failed to create proposal', message: error.message })\n      };\n    }\n  }\n  \n  // Default response for unsupported methods\n  return {\n    statusCode: 405,\n    headers,\n    body: JSON.stringify({ error: 'Method not allowed' })\n  };\n};\n"],
  "mappings": "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",
  "names": ["mockData"]
}
