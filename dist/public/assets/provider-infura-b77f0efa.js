var A=Object.defineProperty;var C=(i,t,e)=>t in i?A(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var y=(i,t,e)=>(C(i,typeof t!="symbol"?t+"":t,e),e),R=(i,t,e)=>{if(!t.has(i))throw TypeError("Cannot "+e)};var n=(i,t,e)=>(R(i,t,"read from private field"),e?e.call(i):t.get(i)),c=(i,t,e)=>{if(t.has(i))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(i):t.set(i,e)},o=(i,t,e,s)=>(R(i,t,"write to private field"),s?s.call(i,e):t.set(i,e),e);import{aQ as x,bG as I,aA as N,bV as E,cc as O,aM as W,J as U,aS as T,aT as q}from"./index-e1be7c10.js";const M=new Set;function J(i){M.has(i)||(M.add(i),console.log("========= NOTICE ========="),console.log(`Request-Rate Exceeded for ${i} (this message will not be repeated)`),console.log(""),console.log("The default API keys for each service are provided as a highly-throttled,"),console.log("community resource for low-traffic projects and early prototyping."),console.log(""),console.log("While your application will continue to function, we highly recommended"),console.log("signing up for your own API keys to improve performance, increase your"),console.log("request rate/limit and enable other perks, such as metrics and advanced APIs."),console.log(""),console.log("For more details: https://docs.ethers.org/api-keys/"),console.log("=========================="))}function F(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("unable to locate global object")}const j=F().WebSocket;var u,S,p,m,d;class v{constructor(t,e){c(this,u,void 0);c(this,S,void 0);c(this,p,void 0);c(this,m,void 0);c(this,d,void 0);o(this,u,t),o(this,S,JSON.stringify(e)),o(this,p,null),o(this,m,null),o(this,d,null)}get filter(){return JSON.parse(n(this,S))}start(){o(this,p,n(this,u).send("eth_subscribe",this.filter).then(t=>(n(this,u)._register(t,this),t)))}stop(){n(this,p).then(t=>{n(this,u).destroyed||n(this,u).send("eth_unsubscribe",[t])}),o(this,p,null)}pause(t){x(t,"preserve logs while paused not supported by SocketSubscriber yet","UNSUPPORTED_OPERATION",{operation:"pause(false)"}),o(this,m,!!t)}resume(){o(this,m,null)}_handleMessage(t){if(n(this,p)!=null&&n(this,m)===null){let e=n(this,d);e==null?e=this._emit(n(this,u),t):e=e.then(async()=>{await this._emit(n(this,u),t)}),o(this,d,e.then(()=>{n(this,d)===e&&o(this,d,null)}))}}async _emit(t,e){throw new Error("sub-classes must implemente this; _emit")}}u=new WeakMap,S=new WeakMap,p=new WeakMap,m=new WeakMap,d=new WeakMap;class D extends v{constructor(t){super(t,["newHeads"])}async _emit(t,e){t.emit("block",parseInt(e.number))}}class G extends v{constructor(t){super(t,["newPendingTransactions"])}async _emit(t,e){t.emit("pending",e)}}var _;class K extends v{constructor(e,s){super(e,["logs",s]);c(this,_,void 0);o(this,_,JSON.stringify(s))}get logFilter(){return JSON.parse(n(this,_))}async _emit(e,s){e.emit(this.logFilter,e._wrapLog(s,e._network))}}_=new WeakMap;var g,w,f;class $ extends I{constructor(e,s){const r=Object.assign({},s??{});N(r.batchMaxCount==null||r.batchMaxCount===1,"sockets-based providers do not support batches","options.batchMaxCount",s),r.batchMaxCount=1,r.staticNetwork==null&&(r.staticNetwork=!0);super(e,r);c(this,g,void 0);c(this,w,void 0);c(this,f,void 0);o(this,g,new Map),o(this,w,new Map),o(this,f,new Map)}_getSubscriber(e){switch(e.type){case"close":return new E("close");case"block":return new D(this);case"pending":return new G(this);case"event":return new K(this,e.filter);case"orphan":if(e.filter.orphan==="drop-log")return new E("drop-log")}return super._getSubscriber(e)}_register(e,s){n(this,w).set(e,s);const r=n(this,f).get(e);if(r){for(const a of r)s._handleMessage(a);n(this,f).delete(e)}}async _send(e){N(!Array.isArray(e),"WebSocket does not support batch send","payload",e);const s=new Promise((r,a)=>{n(this,g).set(e.id,{payload:e,resolve:r,reject:a})});return await this._waitUntilReady(),await this._write(JSON.stringify(e)),[await s]}async _processMessage(e){const s=JSON.parse(e);if(s&&typeof s=="object"&&"id"in s){const r=n(this,g).get(s.id);if(r==null){this.emit("error",O("received result for unknown id","UNKNOWN_ERROR",{reasonCode:"UNKNOWN_ID",result:s}));return}n(this,g).delete(s.id),r.resolve(s)}else if(s&&s.method==="eth_subscription"){const r=s.params.subscription,a=n(this,w).get(r);if(a)a._handleMessage(s.params.result);else{let h=n(this,f).get(r);h==null&&(h=[],n(this,f).set(r,h)),h.push(s.params.result)}}else{this.emit("error",O("received unexpected message","UNKNOWN_ERROR",{reasonCode:"UNEXPECTED_MESSAGE",result:s}));return}}async _write(e){throw new Error("sub-classes must override this")}}g=new WeakMap,w=new WeakMap,f=new WeakMap;var b,l;class H extends ${constructor(e,s,r){super(s,r);c(this,b,void 0);c(this,l,void 0);typeof e=="string"?(o(this,b,()=>new j(e)),o(this,l,n(this,b).call(this))):typeof e=="function"?(o(this,b,e),o(this,l,e())):(o(this,b,null),o(this,l,e)),this.websocket.onopen=async()=>{try{await this._start(),this.resume()}catch(a){console.log("failed to start WebsocketProvider",a)}},this.websocket.onmessage=a=>{this._processMessage(a.data)}}get websocket(){if(n(this,l)==null)throw new Error("websocket closed");return n(this,l)}async _write(e){this.websocket.send(e)}async destroy(){n(this,l)!=null&&(n(this,l).close(),o(this,l,null)),super.destroy()}}b=new WeakMap,l=new WeakMap;const k="84842078b09946638c03157f83405213";function z(i){switch(i){case"mainnet":return"mainnet.infura.io";case"goerli":return"goerli.infura.io";case"sepolia":return"sepolia.infura.io";case"arbitrum":return"arbitrum-mainnet.infura.io";case"arbitrum-goerli":return"arbitrum-goerli.infura.io";case"arbitrum-sepolia":return"arbitrum-sepolia.infura.io";case"base":return"base-mainnet.infura.io";case"base-goerlia":case"base-goerli":return"base-goerli.infura.io";case"base-sepolia":return"base-sepolia.infura.io";case"bnb":return"bsc-mainnet.infura.io";case"bnbt":return"bsc-testnet.infura.io";case"linea":return"linea-mainnet.infura.io";case"linea-goerli":return"linea-goerli.infura.io";case"linea-sepolia":return"linea-sepolia.infura.io";case"matic":return"polygon-mainnet.infura.io";case"matic-amoy":return"polygon-amoy.infura.io";case"matic-mumbai":return"polygon-mumbai.infura.io";case"optimism":return"optimism-mainnet.infura.io";case"optimism-goerli":return"optimism-goerli.infura.io";case"optimism-sepolia":return"optimism-sepolia.infura.io"}N(!1,"unsupported network","network",i)}class B extends H{constructor(e,s){const r=new P(e,s),a=r._getConnection();x(!a.credentials,"INFURA WebSocket project secrets unsupported","UNSUPPORTED_OPERATION",{operation:"InfuraProvider.getWebSocketProvider()"});const h=a.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/");super(h,r._network);y(this,"projectId");y(this,"projectSecret");W(this,{projectId:r.projectId,projectSecret:r.projectSecret})}isCommunityResource(){return this.projectId===k}}class P extends U{constructor(e,s,r){e==null&&(e="mainnet");const a=T.from(e);s==null&&(s=k),r==null&&(r=null);const h=P.getRequest(a,s,r);super(h,a,{staticNetwork:a});y(this,"projectId");y(this,"projectSecret");W(this,{projectId:s,projectSecret:r})}_getProvider(e){try{return new P(e,this.projectId,this.projectSecret)}catch{}return super._getProvider(e)}isCommunityResource(){return this.projectId===k}static getWebSocketProvider(e,s){return new B(e,s)}static getRequest(e,s,r){s==null&&(s=k),r==null&&(r=null);const a=new q(`https://${z(e.name)}/v3/${s}`);return a.allowGzip=!0,r&&a.setCredentials("",r),s===k&&(a.retryFunc=async(h,L,Q)=>(J("InfuraProvider"),!0)),a}}export{P as I,D as S,H as W,B as a,K as b,G as c,$ as d,v as e,J as s};
